When would you want to use a remote repository rather than keeping all your work
local?

    - to share project publicly
    - access to files remotely
    - backup of project incase of disaster

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    - allows work to be modularised
    - can seperate private from public work

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    - forks are useful to seperate work from others and to give credit to owners of material.
    - cloning allows people to take code from others and make copies of your own projects 
    - branches seperate work within projects into sub sections

What is the benefit of having a copy of the last known state of the remote
stored locally?

    - incase a big change by another person happened
    - backup in case somethiong is deleted

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    - sharing changes to files is harder, everyone would be working off their own copy and know would know which one was the best.
    - easir to make changes
    - hard to setup

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    - when multiple people are working on a feature
    - can solve conflicts and work on feature independantly from the main project
    - problem when trying to merge back into master branch
    - have to keep up to date with master branch changes